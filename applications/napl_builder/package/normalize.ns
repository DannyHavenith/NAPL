//
// calculate an amplification factor
// that will keep the samples just within the maximum
// allowed range.
//
function get_amp_factor( source)
{
	analysis = Napl.analyze( source);
	
	//
	// calculate the amplification needed to make full use of the dynamic range
	//
	max_sample = Math.max( Math.abs( analysis.max), Math.abs( analysis.min));
	if (max_sample < 0.000001)
	{
		factor = 1;
	}
	else
	{
		factor = 1/max_sample;
	}

	return factor;
}

//
// amplify (multiply) the source with a constant that 
// will keep the samples just within the maximum
// allowed range
//
function normalize( source)
{
	amp = get_amp_factor( source);
	return Napl.amplify( source, amp);
}


function main( args ) 
{
	//
	// first, get the script arguments 
	args.shift(); // script name
	if (args.length < 2)
	{
		writeln( "i need two argumens: <inputfile> <outputfile>");
		return -1;
	}

	inputfile = args.shift();
	outputfile = args.shift();

	//
	// open the file and get the minimum and maximum values
	//
	file = Napl.read_file( inputfile);
	normalized = normalize( file);
	Napl.write_file( normalized, outputfile);
	
	return 1;
};
